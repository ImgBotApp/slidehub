{"version":3,"sources":["webpack:///webpack/bootstrap 4e43fc09fe6acfd88a3b","webpack:///./src/js/intersection-observer.js","webpack:///./src/js/script.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","window","document","IntersectionObserverEntry","entry","this","time","target","rootBounds","boundingClientRect","intersectionRect","top","bottom","left","right","width","height","isIntersecting","targetRect","targetArea","intersectionArea","intersectionRatio","IntersectionObserver","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","throttle","bind","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","rootMargin","thresholds","_initThresholds","threshold","map","margin","value","unit","join","now","performance","fn","timeout","timer","setTimeout","addEvent","node","event","opt_useCapture","addEventListener","attachEvent","removeEvent","removeEventListener","detatchEvent","computeRectIntersection","rect1","rect2","Math","max","min","getBoundingClientRect","el","rect","err","containsDeep","parent","child","getParentNode","parentNode","host","registry","POLL_INTERVAL","observe","some","item","element","_registerInstance","push","_monitorIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","slice","opt_threshold","Array","isArray","sort","t","a","isNaN","opt_rootMargin","margins","split","parts","exec","parseFloat","_monitoringIntersections","_monitoringInterval","setInterval","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","forEach","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","_hasCrossedThreshold","getComputedStyle","display","atRoot","parentRect","parentComputedStyle","body","documentElement","overflow","html","clientWidth","clientHeight","_expandRectByRootMargin","newRect","oldRatio","newRatio","indexOf","index","splice","documentObserverHandler","entries","observer","loadDocuments","then","container","querySelector","config","class","main","lastElementChild","catch","message","console","info","error","documentsData","Promise","reject","loadDocumentBatch","docs","doc","onDocumentLoaded","batchSize","documents","data","shift","createDocument","all","insertAdjacentHTML","view","state","viewObserver","setDocumentWidth","enableDocumentScrolling","docName","itemCount","resolve","items","source","assetPath","docSource","documentOuterWidth","getFloatPropertyValue","getComputedOuterChildrenWidth","style","setProperty","prevX","prevY","transitionValue","moveViewItemsWithTransform","touched","getPropertyValue","targetTouches","clientX","supportsPassive","passive","touch","offsetX","offsetY","clientY","abs","activateOnHover","newItemX","getViewPixelPos","setViewPixelPos","newPos","getViewPos","setViewPos","round","evaluateItemWidth","itemOuterWidth","getOuterWidth","itemWidth","getFullyVisibleItems","viewWidth","floor","handleKeyboardInput","keyCode","controlKeyNames","preventDefault","keyName","controlKey","trigger","closest","setActiveView","setActiveItem","handleItemLinking","isInteractive","activeView","openItem","ctrlKey","getAttribute","itemIndex","getActiveItem","itemSource","open","location","href","enableModifier","modifier","modifierKey","replace","from","querySelectorAll","innerText","setAttribute","onModifierDown","passiveListener","onModifierUp","onModifierBlur","disableModifier","modifierKeyNames","handleWheelNavigation","scrollingVertically","deltaX","deltaY","delta","log","childElementCount","visibleItems","moveView","sign","distance","moveItem","currentIndex","parseInt","targetIndex","clamp","getItemCount","targetItem","getItemByIndex","viewRect","marginLeft","marginRight","actualDistance","getTranslateX","scrollLeft","itemPos","itemX","disableTransition","matrix","goToPreviousView","previousElementSibling","goToNextView","nextElementSibling","views","classList","remove","add","activeElement","blur","children","enableModalButtons","button","removeAttribute","openModal","closeModal","targetClass","currentTarget","modal","lastFocusedElement","getFocusableElements","focus","closeModalOnEscape","trapTabKey","activeListener","closeModalOnBackground","tabbable","tabIndex","shiftKey","ancestor","focusableElementsSelector","tag","tagName","toLowerCase","potentiallyInteractive","includes","hasAttribute","disabled","offsetParent","enableToggleButtons","toggleButtons","featureName","stateAttr","features","enabled","toggle","isPressed","String","triggerButtonAction","feature","enable","disable","warn","initializeLazyLoader","viewObservationHandler","images","img","handleFirstItemImageLoaded","preserveAspectRatio","setItemAspectRatio","imgSample","aspectRatio","naturalWidth","naturalHeight","outerWidth","core","wheelNavigation","keyboardNavigation","itemLinking","activatingOnHover","freeze","16","17","18","35","36","37","38","39","40","homeKey","direction","endKey","arrowLeft","arrowRight","arrowUp","arrowDown","tabKey","documentObserver","values","opts"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4e43fc09fe6acfd88a3b","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/WICG/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observering a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://wicg.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    this.intersectionRatio = intersectionArea / targetArea;\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://wicg.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  // If the target is already being observed, do nothing.\n  if (this._observationTargets.some(function(item) {\n    return item.element == target;\n  })) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibilty state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    this._checkForIntersections();\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if ('MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://wicg.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its executiong, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/WICG/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child elemnt (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/intersection-observer.js\n// module id = 8\n// module chunks = 0","'use strict';\n\n/*\n* Configuration\n*/\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assetPath: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n\n  itemWidth: 300,\n\n  // How to position scrollable content\n  //   true:  Use CSS transforms\n  //   false: Use the views `scrollLeft`/`scrollTop` property\n  moveViewItemsWithTransform: true,\n\n  // Preserve aspect ratio of document items\n  //   true:  Preserves aspect ratio\n  //   false: Uses a default aspect ratio of 5:4\n  preserveAspectRatio: true,\n\n  // HTML classes that can be used in CSS selectors\n  class: {\n    main: '.main-content',\n    view: '.doc-view',\n    doc: '.doc',\n    item: '.doc__page'\n  },\n\n  // Modifier key. Possible values: ctrlKey, shiftKey, altKey\n  modifierKey: 'shiftKey'\n};\n\n/*\n* Features\n*/\nconst features = {\n  core: {\n    enabled: true,\n    enable: function() {\n      enableModalButtons();\n      enableToggleButtons();\n    },\n    disable: function() {\n      console.info('Not very effective. (Can’t disable core feature.)');\n    }\n  },\n\n  wheelNavigation: {\n    enabled: true,\n    enable: function() {\n      enableModifier();\n      document.addEventListener('wheel', handleWheelNavigation, activeListener);\n    },\n    disable: function() {\n      disableModifier();\n      document.removeEventListener('wheel', handleWheelNavigation, activeListener);\n    }\n  },\n\n  keyboardNavigation: {\n    enabled: true,\n    enable: function() {\n      document.addEventListener('keydown', handleKeyboardInput, activeListener);\n    },\n    disable: function() {\n      document.removeEventListener('keydown', handleKeyboardInput, activeListener);\n    }\n  },\n\n  itemLinking: {\n    enabled: true,\n    enable: function() {\n      document.addEventListener('keydown', handleItemLinking, passiveListener);\n    },\n    disable: function() {\n      document.removeEventListener('keydown', handleItemLinking, passiveListener);\n    }\n  },\n\n  activatingOnHover: {\n    enabled: false,\n    enable: function() {\n      document.addEventListener('mousemove', activateOnHover, passiveListener);\n    },\n    disable: function() {\n      document.removeEventListener('mousemove', activateOnHover, passiveListener);\n    }\n  }\n};\n\nconst state = {\n  activeView: null,\n  viewObserver: null,\n  visibleItems: null,\n  lastFocusedElement: null,\n  touched: false\n};\n\n// Maps key codes to key names\nconst modifierKeyNames = Object.freeze({\n  16: 'shiftKey',\n  17: 'ctrlKey',\n  18: 'altKey'\n});\n\n/*\n* Maps key codes to key names.\n* It’s used within keyboard-related event handlers in order to work with the\n* keys’ names instead of key codes.\n*\n* Removing an entry here disables its application-related interactions\n*/\nconst controlKeyNames = Object.freeze({\n  // 9: 'tabKey',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n});\n\n/*\n* Maps control keys to a trigger function that is executed when the key is\n* pressed.\n*/\nconst controlKey = Object.freeze({\n  homeKey: {\n    direction: -1,\n    trigger: function() {\n      // setViewPos(state.activeView, 0)\n      moveItem(this.direction * getItemCount(state.activeView));\n    }\n  },\n  endKey: {\n    direction: 1,\n    trigger: function() {\n      // setViewPos(state.activeView, getLastItemIndex())\n      moveItem(this.direction * getItemCount(state.activeView));\n    }\n  },\n  arrowLeft: {\n    direction: -1,\n    trigger: function(event) {\n      moveItem(this.direction * (event.ctrlKey ? 3 : 1));\n    }\n  },\n  arrowRight: {\n    direction: 1,\n    trigger: function(event) {\n      moveItem(this.direction * (event.ctrlKey ? 3 : 1));\n    }\n  },\n  arrowUp: {\n    trigger: function() {\n      goToPreviousView();\n    }\n  },\n  arrowDown: {\n    trigger: function() {\n      goToNextView();\n    }\n  },\n  tabKey: {\n    trigger: function(event) {\n      if (event.shiftKey) {\n        goToPreviousView();\n      } else {\n        goToNextView();\n      }\n    }\n  }\n});\n\nmodule.exports = function() {\n  initializeLazyLoader();\n\n  document.addEventListener('DOMContentLoaded', function() {\n    const documentObserver = new IntersectionObserver(documentObserverHandler, { threshold: 1 });\n\n    loadDocuments().then(() => {\n      // onFirstDocumentLoaded\n      const firstView = document.querySelector(config.class.view);\n      setActiveView(firstView);\n      evaluateItemWidth();\n      state.visibleItems = getFullyVisibleItems();\n\n      const container = document.querySelector(config.class.main);\n      documentObserver.observe(container.lastElementChild);\n    });\n\n    Object.values(features).forEach(feature => {\n      if (feature.enabled) {\n        feature.enable();\n      }\n    });\n  });\n};\n\n/*\n* Document Loading\n*/\n\nfunction documentObserverHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting === false) {\n      continue;\n    }\n\n    observer.unobserve(entry.target);\n\n    // add loading indicator\n\n    loadDocuments()\n      .then(() => {\n        // remove loading indicator\n        const container = document.querySelector(config.class.main);\n        observer.observe(container.lastElementChild);\n      })\n      .catch(message => {\n        console.info(message);\n\n        if ('disconnect' in IntersectionObserver.prototype) {\n          observer.disconnect();\n        } else {\n          console.error('IntersectionObserver.disconnect not available.');\n        }\n      });\n  }\n}\n\nfunction loadDocuments() {\n  const batchSize = 10;\n  const container = document.querySelector(config.class.main);\n\n  if (documentsData.length === 0) {\n    return Promise.reject('No documents left to load.');\n  }\n\n  return loadDocumentBatch(batchSize).then(docs => {\n    console.info('Loaded document batch.');\n    docs.forEach(doc => onDocumentLoaded(container, doc));\n  });\n}\n\nfunction loadDocumentBatch(batchSize) {\n  const documents = [];\n\n  for (let i = 0; i < batchSize && documentsData.length > 0; i++) {\n    const data = documentsData.shift();\n    documents.push(createDocument(data[0], data[1]));\n  }\n\n  return Promise.all(documents);\n}\n\nfunction onDocumentLoaded(container, doc) {\n  container.insertAdjacentHTML('beforeend', doc);\n  const view = container.lastElementChild;\n  state.viewObserver.observe(view);\n  setDocumentWidth(view.querySelector(config.class.doc));\n  enableDocumentScrolling(view);\n}\n\nfunction createDocument(docName, itemCount) {\n  return new Promise((resolve, reject) => {\n    let items = '';\n    for (var i = 0; i < itemCount; i++) {\n      const source = `${config.assetPath}/${docName}-${i}.png`;\n      items += `\n        <div class=\"${config.class.item.slice(1)}\" data-page=\"${i + 1}\">\n          <img data-src=\"${source}\" alt=\"page ${i + 1}\">\n        </div>\n      `;\n    }\n\n    const docSource = `${config.assetPath}/${docName}`;\n\n    const docMarkup = `\n      <div\n        class=\"${config.class.view.slice(1)}\"\n        id=\"${docName}\"\n        data-doc-source=\"${docSource}\"\n        data-page-count=\"${itemCount + 1}\">\n        <div class=\"${config.class.doc.slice(1)}\">\n          <div class=\"${config.class.item.slice(1)} doc-info active\" data-page=\"0\">\n            <h2 class=\"doc-title\">\n              <a href=\"${docSource}\">${docName}</a>\n            </h2>\n            by <span class=\"doc-author\">author</span>,\n            <span class=\"doc-pages-count\">${itemCount}</span> pages,\n            2018\n          </div>\n          ${items}\n        </div>\n      </div>\n    `;\n\n    resolve(docMarkup);\n  });\n}\n\nfunction setDocumentWidth(doc) {\n  const documentOuterWidth =\n    getFloatPropertyValue(doc, 'margin-left') +\n    getFloatPropertyValue(doc, 'border-left-width') +\n    getComputedOuterChildrenWidth(doc) +\n    getFloatPropertyValue(doc, 'border-right-width') +\n    getFloatPropertyValue(doc, 'margin-right');\n\n  doc.style.setProperty('width', documentOuterWidth + 'px');\n}\n\nfunction enableDocumentScrolling(view) {\n  let prevX, prevY;\n  let transitionValue;\n  let doc;\n\n  view.addEventListener(\n    'touchstart',\n    function(event) {\n      if (config.moveViewItemsWithTransform) {\n        view.style.setProperty('will-change', 'transform');\n      }\n\n      state.touched = true;\n      doc = view.querySelector(config.class.doc);\n      transitionValue = getComputedStyle(doc).getPropertyValue('transition');\n      doc.style.setProperty('transition', 'none');\n\n      prevX = event.targetTouches[0].clientX;\n    },\n    supportsPassive ? { passive: true } : false\n  );\n\n  view.addEventListener(\n    'touchmove',\n    function(event) {\n      if (state.touched) {\n        const touch = event.targetTouches[0];\n        const offsetX = touch.clientX - prevX;\n        const offsetY = touch.clientY - prevY;\n\n        // Determine vertical/horizontal scrolling ratio\n        const directionRatio = Math.abs(offsetX / offsetY);\n        if (directionRatio < 1) {\n          return;\n        }\n\n        activateOnHover(event);\n        const newItemX = getViewPixelPos(view) - offsetX;\n        const disableTransition = true;\n        setViewPixelPos(view, newItemX, disableTransition);\n        prevX = touch.clientX;\n        prevY = touch.clientY;\n      }\n    },\n    supportsPassive ? { passive: true } : false\n  );\n\n  view.addEventListener(\n    'touchend',\n    function(event) {\n      if (state.touched) {\n        const newPos = getViewPos(view);\n        setViewPos(view, Math.round(newPos));\n\n        if (config.moveViewItemsWithTransform) {\n          view.style.setProperty('will-change', 'auto');\n        }\n\n        state.touched = false;\n        doc.style.setProperty('transition', transitionValue);\n      }\n    },\n    supportsPassive ? { passive: true } : false\n  );\n}\n\nfunction evaluateItemWidth() {\n  const itemSample = document.querySelector(config.class.item);\n  const itemOuterWidth = getOuterWidth(itemSample);\n\n  if (itemOuterWidth !== config.itemWidth) {\n    console.info(\n      'Pre-configured page width does not match actual page width.',\n      'Updating configuration.'\n    );\n    config.itemWidth = itemOuterWidth;\n  }\n}\n\nfunction getFullyVisibleItems() {\n  const itemSample = document.querySelector(config.class.item);\n  const itemOuterWidth = getOuterWidth(itemSample);\n\n  const viewSample = document.querySelector(config.class.view);\n  const viewWidth = getFloatPropertyValue(viewSample, 'width');\n  return Math.floor(viewWidth / itemOuterWidth);\n}\n\n/*\n* Navigation\n*/\nfunction handleKeyboardInput(event) {\n  if (event.keyCode in controlKeyNames) {\n    event.preventDefault();\n    const keyName = controlKeyNames[event.keyCode];\n    controlKey[keyName].trigger(event);\n  }\n}\n\nfunction activateOnHover(event) {\n  const view = event.target.closest(config.class.view);\n  const item = event.target.closest(config.class.item);\n\n  if (view === null || item === null) {\n    return;\n  }\n\n  setActiveView(view);\n  setActiveItem(view, item);\n}\n\n/*\n* Item Linking.\n*\n* Open an items’ source document (e.g. a PDF page) by pressing <kbd>Return</kbd>.\n*/\nfunction handleItemLinking(event) {\n  if (event.keyCode !== 13) {\n    return;\n  }\n\n  // Focusable elements have a default behavior (e.g. activating a link)\n  // That behavior shall not be altered/extended.\n  if (isInteractive(event.target)) {\n    return;\n  }\n\n  if (state.activeView !== null) {\n    openItem(state.activeView, event.ctrlKey);\n  }\n}\n\nfunction openItem(view, ctrlKey) {\n  const docSource = view.getAttribute('data-doc-source');\n  const itemIndex = getActiveItem(view).getAttribute('data-page');\n  const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n  const itemSource = docSource + fragment;\n\n  if (ctrlKey) {\n    window.open(itemSource);\n  } else {\n    window.location.href = itemSource;\n  }\n}\n\n/*\n* Modifier keys.\n*/\nfunction enableModifier() {\n  const modifier = config.modifierKey.replace('Key', '');\n  const modifierElements = Array.from(document.querySelectorAll('[aria-label=\"Modifier\"]'));\n  modifierElements.forEach(element => {\n    element.innerText = modifier;\n    element.setAttribute('aria-label', modifier);\n  });\n\n  document.addEventListener('keydown', onModifierDown, passiveListener);\n  document.addEventListener('keyup', onModifierUp, passiveListener);\n  window.addEventListener('blur', onModifierBlur, passiveListener);\n}\n\nfunction disableModifier() {\n  document.removeEventListener('keydown', onModifierDown, passiveListener);\n  document.removeEventListener('keyup', onModifierUp, passiveListener);\n  window.removeEventListener('blur', onModifierBlur, passiveListener);\n}\n\nfunction onModifierDown(event) {\n  const modifierKey = modifierKeyNames[event.keyCode];\n  if (modifierKey === config.modifierKey) {\n    const doc = state.activeView.querySelector(config.class.doc);\n    doc.style.setProperty('cursor', 'ew-resize');\n  }\n}\n\nfunction onModifierUp(event) {\n  const modifierKey = modifierKeyNames[event.keyCode];\n  if (modifierKey === config.modifierKey) {\n    const doc = state.activeView.querySelector(config.class.doc);\n    doc.style.setProperty('cursor', 'auto');\n  }\n}\n\nfunction onModifierBlur() {\n  const doc = state.activeView.querySelector(config.class.doc);\n  doc.style.setProperty('cursor', 'auto');\n}\n\n/*\n* Mouse wheel item navigation\n*/\n// let combinedDelta = 0;\n\nfunction handleWheelNavigation(event) {\n  const scrollingVertically = Math.abs(event.deltaX / event.deltaY) < 1;\n  const delta = scrollingVertically ? event.deltaY : event.deltaX;\n\n  // When scrolling vertically, only trigger navigation when modifier is pressed\n  if (scrollingVertically && event[config.modifierKey] === false) {\n    return;\n  }\n\n  if (!scrollingVertically) {\n    // combinedDelta += delta\n    // console.log(combinedDelta)\n    console.log('handle horizontal wheel scrolling properly');\n  }\n\n  const view = event.target.closest(config.class.view);\n  if (view === null) {\n    return;\n  }\n\n  // Prevent vertical scrolling\n  event.preventDefault();\n\n  // Prevent unnecessary actions when there is nothing to scroll\n  const numItems = view.querySelector(config.class.doc).childElementCount;\n  if (numItems <= state.visibleItems) {\n    return;\n  }\n\n  moveView(Math.sign(delta));\n}\n\nfunction moveView(distance) {\n  const view = state.activeView;\n  if (view === null) {\n    return;\n  }\n\n  // Move items along with view\n  // moveItem(distance)\n\n  let currentViewPos = getViewPos(view);\n  // if (isNotAligned(currentViewPos)) {\n  //   currentViewPos = Math.round(currentViewPos);\n  // }\n  setViewPos(view, currentViewPos + distance);\n}\n\nfunction isNotAligned(itemsBeforeView) {\n  return itemsBeforeView % 1 !== 0;\n}\n\nfunction moveItem(distance) {\n  const view = state.activeView;\n  const item = getActiveItem(view);\n  const currentIndex = parseInt(item.getAttribute('data-page'));\n  const lastIndex = getItemCount(view) - 1;\n  const targetIndex = clamp(currentIndex + distance, 0, lastIndex);\n  const targetItem = getItemByIndex(view, targetIndex);\n  setActiveItem(view, targetItem);\n\n  // Move view if item would become partially hidden\n  const targetRect = targetItem.getBoundingClientRect();\n  const viewRect = view.getBoundingClientRect();\n  const marginLeft = getFloatPropertyValue(targetItem, 'margin-left');\n  const marginRight = getFloatPropertyValue(targetItem, 'margin-right');\n  const isFullyVisible =\n    targetRect.left >= viewRect.left &&\n    targetRect.right + marginLeft + marginRight <= viewRect.left + viewRect.width;\n  const actualDistance = targetIndex - currentIndex;\n  if (isFullyVisible === false) {\n    moveView(actualDistance);\n    return;\n  }\n\n  // Move view if it’s not aligned\n  // let currentViewPos = getViewPos(view)\n  // if (isNotAligned(currentViewPos) && Math.sign(distance) < 0) {\n  //   setViewPos(view, Math.floor(currentViewPos))\n  // }\n}\n\nfunction getViewPos(view) {\n  return getViewPixelPos(view) / config.itemWidth;\n}\n\nfunction getViewPixelPos(view) {\n  if (config.moveViewItemsWithTransform) {\n    const doc = view.querySelector(config.class.doc);\n    // Negate the value in order to match scrollbar position values\n    const itemPos = -1 * getTranslateX(doc);\n    return itemPos;\n  }\n\n  return view.scrollLeft;\n}\n\nfunction setViewPos(view, itemPos) {\n  if (view === null) {\n    return;\n  }\n\n  const doc = view.querySelector(config.class.doc);\n  const maxPos = getItemCount(view) - state.visibleItems;\n  itemPos = clamp(itemPos, 0, maxPos);\n  // if (itemPos < 0) {\n  //   itemPos = 0;\n  // }\n  // else if (itemPos > maxPos) {\n  //   itemPos = maxPos;\n  // }\n\n  let itemX = itemPos * config.itemWidth;\n  // const maxX = getOuterWidth(doc) - getOuterWidth(view)\n  // if (itemX > maxX) {\n  //   itemX = maxX;\n  // }\n\n  setViewPixelPos(view, itemX);\n}\n\nfunction setViewPixelPos(view, itemX, disableTransition = false) {\n  const doc = view.querySelector(config.class.doc);\n\n  if (config.moveViewItemsWithTransform) {\n    doc.style.setProperty('transform', `translateX(${-itemX}px)`);\n  } else {\n    view.scrollLeft = itemX;\n  }\n}\n\nfunction getTranslateX(element) {\n  const matrix = getComputedStyle(element).getPropertyValue('transform');\n\n  if (matrix === 'none') {\n    return 0;\n  }\n\n  return parseFloat(matrix.split(',')[4]);\n}\n\nfunction goToPreviousView() {\n  const target = state.activeView.previousElementSibling;\n  if (target !== null) {\n    setActiveView(target);\n  }\n}\n\nfunction goToNextView() {\n  const target = state.activeView.nextElementSibling;\n  if (target !== null) {\n    setActiveView(target);\n  }\n}\n\nfunction getLastItemIndex() {\n  const doc = state.activeView.querySelector(config.class.doc);\n  return doc.childElementCount - 1;\n}\n\nfunction setActiveView(view) {\n  const views = document.querySelectorAll(`${config.class.view}.active`);\n  Array.from(views).forEach(element => element.classList.remove('active'));\n  state.activeView = view;\n  state.activeView.classList.add('active');\n  document.activeElement.blur();\n}\n\nfunction getItemCount(view) {\n  return parseInt(view.getAttribute('data-page-count'));\n}\n\nfunction getActiveItem(view) {\n  return view.querySelector(`${config.class.item}.active`);\n}\n\nfunction setActiveItem(view, targetItem) {\n  const activeItem = getActiveItem(view);\n  activeItem.classList.remove('active');\n  targetItem.classList.add('active');\n  document.activeElement.blur();\n}\n\nfunction getItemByIndex(view, index) {\n  const doc = view.querySelector(config.class.doc);\n  return doc.children[index];\n}\n\n/*\n* Modal window\n*\n* Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus\n* https://github.com/gdkraus/accessible-modal-dialog\n*/\nfunction enableModalButtons() {\n  Array.from(document.querySelectorAll('button[data-target-modal]')).forEach(button => {\n    button.removeAttribute('disabled');\n    button.addEventListener('click', openModal);\n  });\n\n  Array.from(document.querySelectorAll('.modal__close')).forEach(button => {\n    button.addEventListener('click', closeModal);\n  });\n}\n\nfunction openModal(event) {\n  const targetClass = event.currentTarget.getAttribute('data-target-modal');\n  const modal = document.querySelector(`.${targetClass}`);\n\n  if (modal === null) {\n    return;\n  }\n\n  // Save last focused element\n  state.lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  modal.classList.remove('closed');\n\n  getFocusableElements(modal)[0].focus();\n\n  // Setup event listeners\n  modal.addEventListener('keydown', closeModalOnEscape, passiveListener);\n  modal.addEventListener('keydown', trapTabKey, activeListener);\n  modal.addEventListener('click', closeModalOnBackground, passiveListener);\n}\n\nfunction closeModal(event) {\n  const modal = event.target.closest('.modal');\n\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  modal.classList.add('closed');\n\n  // Clean up event listeners\n  modal.removeEventListener('keydown', closeModalOnEscape, passiveListener);\n  modal.removeEventListener('keydown', trapTabKey, activeListener);\n  modal.removeEventListener('click', closeModalOnBackground, passiveListener);\n\n  // Restore previously focused element\n  state.lastFocusedElement.focus();\n}\n\nfunction closeModalOnBackground(event) {\n  if (event.target === event.currentTarget) {\n    closeModal(event);\n  }\n}\n\nfunction closeModalOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(event);\n  }\n}\n\n/*\n* Make it impossible to focus an element outside the modal\n*/\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabbable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabbable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabbable[0]) {\n      tabbable[tabbable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabbable[tabbable.length - 1]) {\n      tabbable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\nconst focusableElementsSelector =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable=true]';\n\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (element.hasAttribute('href') === false) {\n        return false;\n      }\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.getAttribute('contenteditable') === 'true') {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n\n/*\n* Toggle Buttons\n*/\nfunction enableToggleButtons() {\n  const toggleButtons = document.querySelectorAll('[aria-pressed], [aria-checked]');\n  Array.from(toggleButtons).forEach(button => {\n    const featureName = button.getAttribute('data-feature');\n    const stateAttr = button.hasAttribute('aria-pressed') ? 'aria-pressed' : 'aria-checked';\n    if (features[featureName].enabled) {\n      button.setAttribute(stateAttr, 'true');\n    } else {\n      button.setAttribute(stateAttr, 'false');\n    }\n\n    button.addEventListener('click', event => toggle(event.currentTarget));\n  });\n}\n\nfunction toggle(button) {\n  const stateAttr = button.hasAttribute('aria-pressed') ? 'aria-pressed' : 'aria-checked';\n  const isPressed = button.getAttribute(stateAttr) === 'true';\n  button.setAttribute(stateAttr, String(!isPressed));\n\n  triggerButtonAction(button, stateAttr);\n}\n\nfunction triggerButtonAction(button, stateAttr) {\n  switch (true) {\n    case button.hasAttribute('data-feature'):\n      const featureName = button.getAttribute('data-feature');\n      const feature = features[featureName];\n      if (button.getAttribute(stateAttr) === 'true') {\n        feature.enable();\n        console.info(`Enabled ${featureName}.`);\n      } else {\n        feature.disable();\n        console.info(`Disabled ${featureName}.`);\n      }\n      break;\n\n    default:\n      console.warn('No action is associated with the control', button);\n      break;\n  }\n}\n\n/*\n* Lazy-loading page images\n*/\n\n/*\n* Observes document views in order to load their item images only when\n* they’re visible.\n*/\nfunction initializeLazyLoader() {\n  const options = {\n    rootMargin: `500px 0px`\n  };\n\n  state.viewObserver = new IntersectionObserver(viewObservationHandler, options);\n}\n\nfunction viewObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      const view = entry.target;\n      const images = Array.from(view.querySelectorAll('img[data-src]'));\n      // For each image …\n      images.forEach(img => {\n        // … swap out the `data-src` attribute with the `src` attribute.\n        // This will start loading the images.\n        if (img.hasAttribute('data-src')) {\n          img.setAttribute('src', img.getAttribute('data-src'));\n          img.removeAttribute('data-src');\n        }\n      });\n\n      images[0].addEventListener('load', () => handleFirstItemImageLoaded(entry.target));\n\n      // Unobserve the current target because no further action is required\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\nfunction handleFirstItemImageLoaded(view) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(view);\n  }\n}\n\nfunction setItemAspectRatio(view) {\n  const imgSample = view.querySelector(`${config.class.item} > img`);\n  const aspectRatio = imgSample.naturalWidth / imgSample.naturalHeight;\n  view.style.setProperty('--page-aspect-ratio', aspectRatio);\n}\n\n/*\n* MISC\n*/\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\n/*\n* https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n*/\nlet supportsPassive = false;\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (event) {}\n\nconst activeListener = supportsPassive ? { passive: false } : false;\nconst passiveListener = supportsPassive ? { passive: true } : false;\n\nfunction getFloatPropertyValue(element, property) {\n  const value = getComputedStyle(element).getPropertyValue(property);\n\n  if (value === '') {\n    return 0;\n  }\n\n  return parseFloat(value);\n}\n\n/*\n* Computes the total outer width of an element by accumulating its children’s\n* horizontal dimension property values (i.e. margin-left, width, margin-right)\n*/\nfunction getComputedOuterChildrenWidth(element) {\n  let outerWidth = 0;\n\n  Array.from(element.children).forEach(child => {\n    outerWidth += getOuterWidth(child);\n  });\n\n  return outerWidth;\n}\n\n/*\n* Computes the total outer width of an element.\n* The outer width is defined as the width plus any horizontal margins.\n* This is assumes the the `box-sizing` box model.\n*/\nfunction getOuterWidth(element) {\n  const width = getFloatPropertyValue(element, 'width');\n  const marginLeft = getFloatPropertyValue(element, 'margin-left');\n  const marginRight = getFloatPropertyValue(element, 'margin-right');\n\n  return marginLeft + width + marginRight;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/script.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}